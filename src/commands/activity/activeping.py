import discord
from discord.ext import commands, tasks
from modules.db import get_database
from datetime import datetime, timedelta

db = get_database()

class ActivePingChecker(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.check_active_roles.start()

    def cog_unload(self):
        self.check_active_roles.cancel()

    @commands.group(name="activeping", aliases=["ap"], invoke_without_command=True)
    @commands.has_permissions(manage_roles=True)
    async def activeping(self, ctx):
        """–ö–µ—Ä—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–æ—é –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–ª–µ–π"""
        embed = discord.Embed(
            title="üéØ Active Ping System", 
            description="–°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—ó –≤–∏–¥–∞—á—ñ —Ä–æ–ª–µ–π –∞–∫—Ç–∏–≤–Ω–∏–º –≥—Ä–∞–≤—Ü—è–º",
            color=0x00ff00
        )
        embed.add_field(
            name="–ö–æ–º–∞–Ω–¥–∏:",
            value="`/activeping setup <—Ä–æ–ª—å> [–º—ñ–Ω_—Ä—ñ–≤–µ–Ω—å] [–º—ñ–Ω_xp_5–¥–Ω—ñ–≤]` - –ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Å–∏—Å—Ç–µ–º—É\n"
                  "`/activeping disable` - –í–∏–º–∫–Ω—É—Ç–∏ —Å–∏—Å—Ç–µ–º—É\n"
                  "`/activeping status` - –ü–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è\n"
                  "`/activeping check` - –†—É—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ",
            inline=False
        )
        embed.add_field(
            name="–ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º:",
            value="–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ä—ñ–≤–µ–Ω—å: **5**\n–ú—ñ–Ω—ñ–º—É–º XP –∑–∞ 5 –¥–Ω—ñ–≤: **500**",
            inline=False
        )
        await ctx.send(embed=embed)

    @activeping.command(name="setup")
    @commands.has_permissions(manage_roles=True)
    async def setup_activeping(self, ctx, role: discord.Role, min_level: int = 5, min_xp_5d: int = 500):
        """–ù–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ —Å–∏—Å—Ç–µ–º—É –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–ª–µ–π"""
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –±–æ—Ç –º–æ–∂–µ –∫–µ—Ä—É–≤–∞—Ç–∏ —Ü—ñ—î—é —Ä–æ–ª–ª—é
        if role.position >= ctx.guild.me.top_role.position:
            embed = discord.Embed(
                title="‚ùå –ü–æ–º–∏–ª–∫–∞",
                description="–†–æ–ª—å –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤–∏—â–µ –∑–∞ –º–æ—é –Ω–∞–π–≤–∏—â—É —Ä–æ–ª—å! –ü–µ—Ä–µ–º—ñ—Å—Ç—ñ—Ç—å –º–æ—é —Ä–æ–ª—å –≤–∏—â–µ –∞–±–æ –æ–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—É —Ä–æ–ª—å.",
                color=0xff0000
            )
            return await ctx.send(embed=embed)

        # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
        await db.settings.update_one(
            {"guild_id": str(ctx.guild.id)},
            {
                "$set": {
                    "active_role_id": role.id,
                    "min_level": min_level,
                    "min_xp_5d": min_xp_5d
                }
            },
            upsert=True
        )

        embed = discord.Embed(
            title="‚úÖ Active Ping –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ!",
            description=f"–°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–ª–µ–π —É—Å–ø—ñ—à–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞",
            color=0x00ff00
        )
        embed.add_field(name="–†–æ–ª—å:", value=role.mention, inline=True)
        embed.add_field(name="–ú—ñ–Ω. —Ä—ñ–≤–µ–Ω—å:", value=str(min_level), inline=True)
        embed.add_field(name="–ú—ñ–Ω. XP –∑–∞ 5 –¥–Ω—ñ–≤:", value=str(min_xp_5d), inline=True)
        embed.add_field(
            name="‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:",
            value="–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∫–æ–∂–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏.",
            inline=False
        )
        
        await ctx.send(embed=embed)

    @activeping.command(name="disable")
    @commands.has_permissions(manage_roles=True)
    async def disable_activeping(self, ctx):
        """–í–∏–º–∫–Ω—É—Ç–∏ —Å–∏—Å—Ç–µ–º—É –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–ª–µ–π"""
        
        result = await db.settings.update_one(
            {"guild_id": str(ctx.guild.id)},
            {"$unset": {"active_role_id": "", "min_level": "", "min_xp_5d": ""}}
        )
        
        if result.modified_count > 0:
            embed = discord.Embed(
                title="‚úÖ –°–∏—Å—Ç–µ–º—É –≤–∏–º–∫–Ω–µ–Ω–æ",
                description="Active Ping —Å–∏—Å—Ç–µ–º—É –±—É–ª–æ —É—Å–ø—ñ—à–Ω–æ –≤–∏–º–∫–Ω–µ–Ω–æ",
                color=0x00ff00
            )
        else:
            embed = discord.Embed(
                title="‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è",
                description="Active Ping —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –±—É–ª–∞ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ –Ω–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ",
                color=0xffaa00
            )
        
        await ctx.send(embed=embed)

    @activeping.command(name="status")
    @commands.has_permissions(manage_roles=True)
    async def status_activeping(self, ctx):
        """–ü–æ–∫–∞–∑–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"""
        
        setting = await db.settings.find_one({"guild_id": str(ctx.guild.id)})
        
        if not setting or "active_role_id" not in setting:
            embed = discord.Embed(
                title="‚ÑπÔ∏è –°—Ç–∞—Ç—É—Å Active Ping",
                description="–°–∏—Å—Ç–µ–º–∞ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ –Ω–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ",
                color=0xffaa00
            )
            return await ctx.send(embed=embed)

        role = ctx.guild.get_role(setting["active_role_id"])
        if not role:
            embed = discord.Embed(
                title="‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞",
                description="–ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ —Ä–æ–ª—å –±—É–ª–∞ –≤–∏–¥–∞–ª–µ–Ω–∞",
                color=0xff0000
            )
            return await ctx.send(embed=embed)

        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç—É—Å Active Ping",
            description="–ü–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏:",
            color=0x0099ff
        )
        embed.add_field(name="–†–æ–ª—å:", value=role.mention, inline=True)
        embed.add_field(name="–ú—ñ–Ω. —Ä—ñ–≤–µ–Ω—å:", value=str(setting.get("min_level", 5)), inline=True)
        embed.add_field(name="–ú—ñ–Ω. XP –∑–∞ 5 –¥–Ω—ñ–≤:", value=str(setting.get("min_xp_5d", 500)), inline=True)
        embed.add_field(name="–£—á–∞—Å–Ω–∏–∫—ñ–≤ –∑ —Ä–æ–ª–ª—é:", value=str(len(role.members)), inline=True)
        
        await ctx.send(embed=embed)

    @activeping.command(name="check")
    @commands.has_permissions(manage_roles=True)
    async def manual_check(self, ctx):
        """–†—É—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤"""
        
        setting = await db.settings.find_one({"guild_id": str(ctx.guild.id)})
        
        if not setting or "active_role_id" not in setting:
            embed = discord.Embed(
                title="‚ùå –ü–æ–º–∏–ª–∫–∞",
                description="Active Ping —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞ –Ω–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ",
                color=0xff0000
            )
            return await ctx.send(embed=embed)

        # –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ—á–∞—Ç–æ–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
        embed = discord.Embed(
            title="üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ",
            description="–ü–æ—á–∏–Ω–∞—é –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...",
            color=0xffaa00
        )
        message = await ctx.send(embed=embed)

        # –ó–∞–ø—É—Å–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –¥–ª—è —Ü—ñ—î—ó –≥—ñ–ª—å–¥—ñ—ó
        added, removed = await self._check_guild_active_roles(ctx.guild, setting)

        # –û–Ω–æ–≤–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        embed = discord.Embed(
            title="‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–æ",
            description="–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ä—É—á–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ:",
            color=0x00ff00
        )
        embed.add_field(name="–î–æ–¥–∞–Ω–æ —Ä–æ–ª–µ–π:", value=str(added), inline=True)
        embed.add_field(name="–ó–Ω—è—Ç–æ —Ä–æ–ª–µ–π:", value=str(removed), inline=True)
        
        await message.edit(embed=embed)

    async def _check_guild_active_roles(self, guild, setting):
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–ª–µ–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –≥—ñ–ª—å–¥—ñ—ó"""
        role_id = setting["active_role_id"]
        min_level = setting.get("min_level", 5)
        min_xp_5d = setting.get("min_xp_5d", 500)

        role = guild.get_role(role_id)
        if not role:
            return 0, 0

        # –î–∞—Ç–∞ 5 –¥–Ω—ñ–≤ —Ç–æ–º—É
        cutoff_date = datetime.utcnow() - timedelta(days=5)
        
        added_count = 0
        removed_count = 0

        # –ü–µ—Ä–µ–±–∏—Ä–∞—î–º–æ —É—á–∞—Å–Ω–∏–∫—ñ–≤ –≥—ñ–ª—å–¥—ñ—ó
        for member in guild.members:
            if member.bot:
                continue

            # –û—Ç—Ä–∏–º—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            profile = await db.profiles.find_one({"user_id": str(member.id)})
            if not profile:
                # –Ø–∫—â–æ –Ω–µ–º–∞—î –ø—Ä–æ—Ñ—ñ–ª—é, –∑–Ω—ñ–º–∞—î–º–æ —Ä–æ–ª—å, —è–∫—â–æ —î
                if role in member.roles:
                    try:
                        await member.remove_roles(role, reason="Inactive (no profile)")
                        removed_count += 1
                    except Exception:
                        pass
                continue

            level = profile.get("level", 0)
            xp_history = profile.get("xp_history", [])

            # –°—É–º—É—î–º–æ XP –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 5 –¥–Ω—ñ–≤
            recent_xp = 0
            for entry in xp_history:
                date_str = entry.get("date")
                if not date_str:
                    continue
                try:
                    date_obj = datetime.fromisoformat(date_str)
                    if date_obj >= cutoff_date:
                        recent_xp += entry.get("xp", 0)
                except ValueError:
                    continue

            # –õ–æ–≥—ñ–∫–∞ –≤–∏–¥–∞—á—ñ —Ä–æ–ª—ñ
            has_role = role in member.roles
            if level >= min_level and recent_xp >= min_xp_5d:
                if not has_role:
                    try:
                        await member.add_roles(role, reason="Active player role assigned")
                        added_count += 1
                    except Exception:
                        pass
            else:
                if has_role:
                    try:
                        await member.remove_roles(role, reason="Active player role removed (inactive)")
                        removed_count += 1
                    except Exception:
                        pass

        return added_count, removed_count

    @tasks.loop(hours=24)
    async def check_active_roles(self):
        """–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ä–æ–ª–µ–π –∫–æ–∂–Ω—ñ 24 –≥–æ–¥–∏–Ω–∏"""
        # –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –≥—ñ–ª—å–¥—ñ—ó –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏ activeping
        async for setting in db.settings.find({"active_role_id": {"$exists": True}}):
            guild_id = int(setting["guild_id"])
            guild = self.bot.get_guild(guild_id)
            if not guild:
                continue

            try:
                await self._check_guild_active_roles(guild, setting)
            except Exception as e:
                print(f"Error checking active roles for guild {guild_id}: {e}")

    @check_active_roles.before_loop
    async def before_check(self):
        await self.bot.wait_until_ready()

    @setup_activeping.error
    @disable_activeping.error
    @status_activeping.error
    @manual_check.error
    async def activeping_error(self, ctx, error):
        if isinstance(error, commands.MissingPermissions):
            embed = discord.Embed(
                title="‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤",
                description="–î–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏ –ø–æ—Ç—Ä—ñ–±–Ω–µ –ø—Ä–∞–≤–æ **–ö–µ—Ä—É–≤–∞–Ω–Ω—è —Ä–æ–ª—è–º–∏**",
                color=0xff0000
            )
            await ctx.send(embed=embed)
        elif isinstance(error, commands.RoleNotFound):
            embed = discord.Embed(
                title="‚ùå –†–æ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ",
                description="–í–∫–∞–∑–∞–Ω–∞ —Ä–æ–ª—å –Ω–µ —ñ—Å–Ω—É—î –Ω–∞ —Ü—å–æ–º—É —Å–µ—Ä–≤–µ—Ä—ñ",
                color=0xff0000
            )
            await ctx.send(embed=embed)

async def setup(bot):
    await bot.add_cog(ActivePingChecker(bot))