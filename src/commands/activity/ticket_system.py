import discord
from discord import app_commands
from discord.ext import commands
from datetime import datetime
import asyncio
import json
from typing import Optional

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
CONFIG = {
    "MODERATOR_ROLE_ID": 123456789012345678,  # ID —Ä–æ–ª—ñ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤
    "CATEGORY_ID": None,                      # –ë—É–¥–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∞–±–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ
    "LOG_CHANNEL_ID": 123456789012345678,     # ID –∫–∞–Ω–∞–ª—É –ª–æ–≥—ñ–≤ (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
    
    # –†–æ–ª—ñ —è–∫—ñ –º–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —á–µ—Ä–µ–∑ –∑–∞—è–≤–∫—É (–∑–∞–ª–∏—à—Ç–µ –ø—É—Å—Ç–∏–º —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ —Ä–æ–ª—ñ —Å–µ—Ä–≤–µ—Ä–∞)
    "AVAILABLE_ROLES": [
        # 123456789012345678,  # ID —Ä–æ–ª—ñ 1
        # 123456789012345678,  # ID —Ä–æ–ª—ñ 2
    ]
}

# –¢–∏–ø–∏ —Ç—ñ–∫–µ—Ç—ñ–≤
TICKET_TYPES = {
    "role_application": {
        "name": "üé≠ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å",
        "emoji": "üé≠",
        "description": "–ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ä–æ–ª—ñ",
        "questions": [
            "–ß–æ–º—É –≤–∏ —Ö–æ—á–µ—Ç–µ –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—é —Ä–æ–ª—å?",
            "–ß–∏ –º–∞—î—Ç–µ –≤–∏ –¥–æ—Å–≤—ñ–¥, –ø–æ–≤'—è–∑–∞–Ω–∏–π –∑ —Ü—ñ—î—é —Ä–æ–ª–ª—é?",
            "–Ø–∫ –≤–∏ –ø–ª–∞–Ω—É—î—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é —Ä–æ–ª—å?",
            "–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å–µ–±–µ:"
        ]
    },
    "server_suggestion": {
        "name": "üí° –ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞",
        "emoji": "üí°", 
        "description": "–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è —ñ–¥–µ—è–º–∏ –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞",
        "questions": [
            "–Ø–∫–∞ –≤–∞—à–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è?",
            "–Ø–∫ —Ü–µ –ø–æ–∫—Ä–∞—â–∏—Ç—å —Å–µ—Ä–≤–µ—Ä?",
            "–ß–∏ —Ä–æ–∑–≥–ª—è–¥–∞–ª–∏ –≤–∏ –º–æ–∂–ª–∏–≤—ñ –Ω–µ–¥–æ–ª—ñ–∫–∏?",
            "–î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–µ—Ç–∞–ª—ñ –∞–±–æ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ:"
        ]
    },
    "bug_report": {
        "name": "üêõ –ó–≤—ñ—Ç –ø—Ä–æ –±–∞–≥",
        "emoji": "üêõ",
        "description": "–ü–æ–≤—ñ–¥–æ–º–∏—Ç–∏ –ø—Ä–æ —Ç–µ—Ö–Ω—ñ—á–Ω—ñ –ø—Ä–æ–±–ª–µ–º–∏",
        "questions": [
            "–û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É –¥–µ—Ç–∞–ª—å–Ω–æ:",
            "–Ø–∫ –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏ —Ü—é –ø–æ–º–∏–ª–∫—É?",
            "–©–æ –≤–∏ –æ—á—ñ–∫—É–≤–∞–ª–∏ –ø–æ–±–∞—á–∏—Ç–∏?",
            "–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è (—Å–∫—Ä—ñ–Ω—à–æ—Ç–∏, –ª–æ–≥–∏):"
        ]
    },
    "general_support": {
        "name": "‚ùì –ó–∞–≥–∞–ª—å–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞",
        "emoji": "‚ùì",
        "description": "–ü–∏—Ç–∞–Ω–Ω—è –∞–±–æ –¥–æ–ø–æ–º–æ–≥–∞ –≤—ñ–¥ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó",
        "questions": [
            "–û–ø–∏—à—ñ—Ç—å –≤–∞—à–µ –ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ –ø—Ä–æ–±–ª–µ–º—É:",
            "–ß–∏ –Ω–∞–º–∞–≥–∞–ª–∏—Å—å –≤–∏ –≤–∏—Ä—ñ—à–∏—Ç–∏ —Ü–µ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ?",
            "–î–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–µ—Ç–∞–ª—ñ:"
        ]
    },
    "complaint": {
        "name": "‚ö†Ô∏è –°–∫–∞—Ä–≥–∞",
        "emoji": "‚ö†Ô∏è",
        "description": "–ü–æ–¥–∞—Ç–∏ —Å–∫–∞—Ä–≥—É –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ —Å–∏—Ç—É–∞—Ü—ñ—é",
        "questions": [
            "–ù–∞ –∫–æ–≥–æ –∞–±–æ —â–æ –≤–∏ —Å–∫–∞—Ä–∂–∏—Ç–µ—Å—å?",
            "–©–æ —Å—Ç–∞–ª–æ—Å—è? –û–ø–∏—à—ñ—Ç—å —Å–∏—Ç—É–∞—Ü—ñ—é:",
            "–ß–∏ —î —É –≤–∞—Å –¥–æ–∫–∞–∑–∏ (—Å–∫—Ä—ñ–Ω—à–æ—Ç–∏, –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è)?",
            "–î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:"
        ]
    }
}

class TicketTypeSelect(discord.ui.Select):
    def __init__(self):
        options = []
        for ticket_type, config in TICKET_TYPES.items():
            options.append(
                discord.SelectOption(
                    label=config["name"],
                    description=config["description"], 
                    emoji=config["emoji"],
                    value=ticket_type
                )
            )
        
        super().__init__(
            placeholder="üé´ –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ç—ñ–∫–µ—Ç–∞...",
            options=options,
            min_values=1,
            max_values=1,
            custom_id="ticket_type_select_main"
        )
    
    async def callback(self, interaction: discord.Interaction):
        ticket_type = self.values[0]
        
        if ticket_type == "role_application":
            # –Ø–∫—â–æ —Ü–µ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å - –ø–æ–∫–∞–∑—É—î–º–æ –≤–∏–±—ñ—Ä —Ä–æ–ª–µ–π
            view = RoleSelectView(interaction.guild)
            embed = discord.Embed(
                title="üé≠ –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–æ–ª—å",
                description="–û–±–µ—Ä—ñ—Ç—å —Ä–æ–ª—å, –Ω–∞ —è–∫—É —Ö–æ—á–µ—Ç–µ –ø–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É:",
                color=discord.Color.blue()
            )
            await interaction.response.edit_message(embed=embed, view=view)
        else:
            # –î–ª—è —ñ–Ω—à–∏—Ö —Ç–∏–ø—ñ–≤ - –≤—ñ–¥—Ä–∞–∑—É —Å—Ç–≤–æ—Ä—é—î–º–æ —Ç—ñ–∫–µ—Ç
            await self.create_ticket(interaction, ticket_type)
    
    async def create_ticket(self, interaction: discord.Interaction, ticket_type: str, role_id: int = None):
        config = TICKET_TYPES[ticket_type]
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ —î –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —Ç—ñ–∫–µ—Ç
        existing_ticket = None
        for channel in interaction.guild.text_channels:
            if (channel.name.startswith(ticket_type) and 
                str(interaction.user.id) in channel.name):
                existing_ticket = channel
                break
        
        if existing_ticket:
            await interaction.response.send_message(
                f"‚ùå –£ –≤–∞—Å –≤–∂–µ —î –≤—ñ–¥–∫—Ä–∏—Ç–∏–π —Ç—ñ–∫–µ—Ç: {existing_ticket.mention}",
                ephemeral=True
            )
            return
        
        # –ù–∞–∑–≤–∞ —Ç—ñ–∫–µ—Ç–∞
        if role_id:
            role = interaction.guild.get_role(role_id)
            ticket_name = f"role-{role.name if role else 'unknown'}-{interaction.user.id}"
        else:
            ticket_name = f"{ticket_type}-{interaction.user.id}"
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
        category = None
        if CONFIG["CATEGORY_ID"]:
            category = interaction.guild.get_channel(CONFIG["CATEGORY_ID"])
        
        if not category:
            # –®—É–∫–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ –Ω–∞–∑–≤–æ—é "Tickets" –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É
            for cat in interaction.guild.categories:
                if cat.name.lower() in ["tickets", "—Ç—ñ–∫–µ—Ç–∏", "—Ç–∏–∫–µ—Ç—ã"]:
                    category = cat
                    CONFIG["CATEGORY_ID"] = cat.id
                    break
            
            if not category:
                try:
                    category = await interaction.guild.create_category("üé´ –¢—ñ–∫–µ—Ç–∏")
                    CONFIG["CATEGORY_ID"] = category.id
                except Exception as e:
                    await interaction.response.send_message(
                        f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –¥–ª—è —Ç—ñ–∫–µ—Ç—ñ–≤: {e}", 
                        ephemeral=True
                    )
                    return
        
        # –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É
        overwrites = {
            interaction.guild.default_role: discord.PermissionOverwrite(read_messages=False),
            interaction.user: discord.PermissionOverwrite(
                read_messages=True, 
                send_messages=True, 
                attach_files=True,
                embed_links=True
            ),
        }
        
        # –î–æ–¥–∞—î–º–æ –ø—Ä–∞–≤–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º
        mod_role = interaction.guild.get_role(CONFIG["MODERATOR_ROLE_ID"])
        if mod_role:
            overwrites[mod_role] = discord.PermissionOverwrite(
                read_messages=True, 
                send_messages=True, 
                manage_messages=True,
                attach_files=True,
                embed_links=True
            )
        
        try:
            channel = await category.create_text_channel(
                name=ticket_name.lower().replace(" ", "-")[:50],
                overwrites=overwrites,
                topic=f"–¢—ñ–∫–µ—Ç {config['name']} | –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {interaction.user} | ID: {interaction.user.id}"
            )
            
            # Embed –∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—î—é
            embed = discord.Embed(
                title=f"{config['emoji']} {config['name']}",
                description=f"**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:** {interaction.user.mention}\n**–°—Ç–≤–æ—Ä–µ–Ω–æ:** <t:{int(datetime.now().timestamp())}:F>",
                color=discord.Color.green(),
                timestamp=datetime.now()
            )
            
            if role_id:
                role = interaction.guild.get_role(role_id)
                embed.add_field(
                    name="üéØ –ó–∞–ø–∏—Ç—É–≤–∞–Ω–∞ —Ä–æ–ª—å",
                    value=f"{role.mention if role else '–ù–µ–≤—ñ–¥–æ–º–∞ —Ä–æ–ª—å'}",
                    inline=True
                )
            
            embed.add_field(
                name="üìã –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó",
                value="‚Ä¢ –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è —á–µ—Å–Ω–æ —Ç–∞ –¥–µ—Ç–∞–ª—å–Ω–æ\n‚Ä¢ –û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó\n‚Ä¢ –ù–µ —Å–ø–∞–º—Ç–µ –≤ –∫–∞–Ω–∞–ª—ñ",
                inline=False
            )
            
            embed.set_footer(text=f"ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: {interaction.user.id}")
            embed.set_thumbnail(url=interaction.user.display_avatar.url)
            
            # –°—Ç–≤–æ—Ä—é—î–º–æ view –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü—ñ—ó
            if ticket_type == "role_application":
                view = RoleApplicationButtons(role_id, interaction.user.id)
            else:
                view = GeneralTicketButtons(ticket_type, interaction.user.id)
            
            # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            message = await channel.send(
                f"üëã {interaction.user.mention} | üõ°Ô∏è {mod_role.mention if mod_role else '@–ú–æ–¥–µ—Ä–∞—Ü—ñ—è'}\n" +
                f"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ",
                embed=embed,
                view=view
            )
            
            # –ó–∞–∫—Ä—ñ–ø–ª—é—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
            try:
                await message.pin()
            except:
                pass
            
            # –ü–æ—á–∏–Ω–∞—î–º–æ –∑–∞–¥–∞–≤–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è
            await self.ask_questions(channel, config['questions'], interaction.user)
            
            # –í—ñ–¥–ø–æ–≤—ñ–¥—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            success_embed = discord.Embed(
                title="‚úÖ –¢—ñ–∫–µ—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!",
                description=f"**–í–∞—à —Ç—ñ–∫–µ—Ç:** {channel.mention}\n\n" +
                           f"üîπ –¢–∏–ø: {config['name']}\n" +
                           f"üîπ –û—á—ñ–∫—É–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ –º–æ–¥–µ—Ä–∞—Ü—ñ—ó\n" +
                           f"üîπ –ù–µ –∑–∞–∫—Ä–∏–≤–∞–π—Ç–µ —Ü—é –≤–∫–ª–∞–¥–∫—É –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è",
                color=discord.Color.green()
            )
            success_embed.set_footer(text="–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è!")
            
            if interaction.response.is_done():
                await interaction.edit_original_response(embed=success_embed, view=None)
            else:
                await interaction.response.edit_message(embed=success_embed, view=None)
            
            # –õ–æ–≥ —É –∫–∞–Ω–∞–ª –ª–æ–≥—ñ–≤
            await self.log_ticket_creation(interaction.guild, interaction.user, config, channel)
            
        except Exception as e:
            error_message = f"‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—ñ–∫–µ—Ç–∞: {e}"
            if interaction.response.is_done():
                await interaction.edit_original_response(content=error_message, embed=None, view=None)
            else:
                await interaction.response.send_message(error_message, ephemeral=True)
    
    async def ask_questions(self, channel: discord.TextChannel, questions: list, user: discord.Member):
        """–ó–∞–¥–∞—î –ø–∏—Ç–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É"""
        await asyncio.sleep(3)  # –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞
        
        questions_embed = discord.Embed(
            title="üìù –ê–Ω–∫–µ—Ç–∞",
            description="–ë—É–¥—å –ª–∞—Å–∫–∞, –¥–∞–π—Ç–µ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è:",
            color=discord.Color.blue()
        )
        
        for i, question in enumerate(questions, 1):
            questions_embed.add_field(
                name=f"‚ùì –ü–∏—Ç–∞–Ω–Ω—è {i}",
                value=question,
                inline=False
            )
        
        questions_embed.set_footer(text="–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –ø–æ –æ–¥–Ω–æ–º—É –ø–∏—Ç–∞–Ω–Ω—é –≤ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ")
        await channel.send(embed=questions_embed)
    
    async def log_ticket_creation(self, guild: discord.Guild, user: discord.Member, config: dict, channel: discord.TextChannel):
        """–õ–æ–≥—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—ñ–∫–µ—Ç–∞"""
        if not CONFIG["LOG_CHANNEL_ID"]:
            return
        
        log_channel = guild.get_channel(CONFIG["LOG_CHANNEL_ID"])
        if not log_channel:
            return
        
        try:
            embed = discord.Embed(
                title="üé´ –ù–æ–≤–∏–π —Ç—ñ–∫–µ—Ç —Å—Ç–≤–æ—Ä–µ–Ω–æ",
                color=discord.Color.blue(),
                timestamp=datetime.now()
            )
            embed.add_field(name="üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á", value=f"{user.mention} (`{user.id}`)", inline=True)
            embed.add_field(name="üìã –¢–∏–ø", value=config['name'], inline=True)
            embed.add_field(name="üìç –ö–∞–Ω–∞–ª", value=channel.mention, inline=True)
            embed.set_thumbnail(url=user.display_avatar.url)
            
            await log_channel.send(embed=embed)
        except:
            pass

class RoleSelect(discord.ui.Select):
    def __init__(self, guild: discord.Guild):
        self.guild = guild
        options = []
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Ä–æ–ª—ñ —Å–µ—Ä–≤–µ—Ä–∞
        available_roles = []
        if CONFIG["AVAILABLE_ROLES"]:
            # –Ø–∫—â–æ –∑–∞–¥–∞–Ω—ñ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ —Ä–æ–ª—ñ
            for role_id in CONFIG["AVAILABLE_ROLES"]:
                role = guild.get_role(role_id)
                if role and not role.is_bot_managed():
                    available_roles.append(role)
        else:
            # –ü–æ–∫–∞–∑—É—î–º–æ –≤—Å—ñ —Ä–æ–ª—ñ –∫—Ä—ñ–º @everyone, –±–æ—Ç—ñ–≤ —Ç–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤
            for role in guild.roles:
                if (role != guild.default_role and 
                    not role.is_bot_managed() and 
                    role.id != CONFIG["MODERATOR_ROLE_ID"] and
                    not role.permissions.administrator and
                    not role.permissions.manage_guild):
                    available_roles.append(role)
        
        # –°–æ—Ä—Ç—É—î–º–æ –∑–∞ –ø–æ–∑–∏—Ü—ñ—î—é (–≤–∏—â—ñ —Ä–æ–ª—ñ –ø–µ—Ä—à–∏–º–∏)
        available_roles.sort(key=lambda r: r.position, reverse=True)
        
        # –ë–µ—Ä–µ–º–æ –ø–µ—Ä—à—ñ 25 —Ä–æ–ª–µ–π (–æ–±–º–µ–∂–µ–Ω–Ω—è Discord)
        for role in available_roles[:25]:
            options.append(
                discord.SelectOption(
                    label=role.name,
                    description=f"–ü–æ–¥–∞—Ç–∏ –∑–∞—è–≤–∫—É –Ω–∞ —Ä–æ–ª—å {role.name}",
                    emoji="üé≠",
                    value=str(role.id)
                )
            )
        
        if not options:
            options.append(
                discord.SelectOption(
                    label="–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–æ–ª–µ–π",
                    description="–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ü—ñ—ó",
                    value="no_roles"
                )
            )
        
        super().__init__(
            placeholder="üé≠ –û–±–µ—Ä—ñ—Ç—å —Ä–æ–ª—å...",
            options=options,
            min_values=1,
            max_values=1,
            custom_id="role_select_application"
        )
    
    async def callback(self, interaction: discord.Interaction):
        role_id_str = self.values[0]
        
        if role_id_str == "no_roles":
            await interaction.response.send_message("‚ùå –ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Ä–æ–ª–µ–π –¥–ª—è –∑–∞—è–≤–∫–∏!", ephemeral=True)
            return
        
        role_id = int(role_id_str)
        role = interaction.guild.get_role(role_id)
        
        if not role:
            await interaction.response.send_message("‚ùå –†–æ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!", ephemeral=True)
            return
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤–∂–µ –º–∞—î —Ä–æ–ª—å
        if role in interaction.user.roles:
            await interaction.response.send_message(
                f"‚ùå –£ –≤–∞—Å –≤–∂–µ —î —Ä–æ–ª—å {role.mention}!", 
                ephemeral=True
            )
            return
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ —Ç—ñ–∫–µ—Ç –¥–ª—è –∑–∞—è–≤–∫–∏ –Ω–∞ —Ä–æ–ª—å
        ticket_select = TicketTypeSelect()
        await ticket_select.create_ticket(interaction, "role_application", role_id)

class TicketMainView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
        self.add_item(TicketTypeSelect())

class RoleSelectView(discord.ui.View):
    def __init__(self, guild: discord.Guild = None):
        super().__init__(timeout=600)  # 10 —Ö–≤–∏–ª–∏–Ω
        if guild:
            self.add_item(RoleSelect(guild))

class RoleApplicationButtons(discord.ui.View):
    def __init__(self, role_id: int = None, user_id: int = None):
        super().__init__(timeout=None)
        self.role_id = role_id
        self.user_id = user_id
    
    @discord.ui.button(label="‚úÖ –°—Ö–≤–∞–ª–∏—Ç–∏ –∑–∞—è–≤–∫—É", style=discord.ButtonStyle.green, custom_id="approve_role_application")
    async def approve(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∞
        if not any(role.id == CONFIG["MODERATOR_ROLE_ID"] for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤!", ephemeral=True)
            return
        
        # –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –¥–∞–Ω–∏—Ö
        if not self.role_id or not self.user_id:
            await interaction.response.send_message("‚ùå –î–∞–Ω—ñ —Ç—ñ–∫–µ—Ç–∞ –≤—Ç—Ä–∞—á–µ–Ω–æ. –í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ /close_ticket", ephemeral=True)
            return
        
        user = interaction.guild.get_member(self.user_id)
        if not user:
            await interaction.response.send_message("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ!", ephemeral=True)
            return
        
        # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ä–æ–ª—å
        role = interaction.guild.get_role(self.role_id)
        if not role:
            await interaction.response.send_message("‚ùå –†–æ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞!", ephemeral=True)
            return
        
        try:
            await user.add_roles(role, reason=f"–°—Ö–≤–∞–ª–µ–Ω–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user}")
            
            # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Ç—ñ–∫–µ—Ç—ñ
            embed = discord.Embed(
                title="‚úÖ –ó–∞—è–≤–∫—É —Å—Ö–≤–∞–ª–µ–Ω–æ!",
                description=f"**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:** {user.mention}\n**–†–æ–ª—å:** {role.mention}\n**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}",
                color=discord.Color.green(),
                timestamp=datetime.now()
            )
            embed.add_field(
                name="üéâ –í—ñ—Ç–∞—î–º–æ!",
                value=f"–†–æ–ª—å **{role.name}** —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ –¥–æ –ø—Ä–æ—Ñ—ñ–ª—é –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞!",
                inline=False
            )
            
            await interaction.response.edit_message(embed=embed, view=TicketCloseView())
            
            # DM –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            try:
                dm_embed = discord.Embed(
                    title="üéâ –ó–∞—è–≤–∫—É —Å—Ö–≤–∞–ª–µ–Ω–æ!",
                    description=f"–í–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ —Ä–æ–ª—å **{role.name}** —Å—Ö–≤–∞–ª–µ–Ω–æ!\n\n" +
                               f"üîπ –°–µ—Ä–≤–µ—Ä: **{interaction.guild.name}**\n" +
                               f"üîπ –†–æ–ª—å –¥–æ–¥–∞–Ω–æ –¥–æ –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é\n" +
                               f"üîπ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {interaction.user.mention}",
                    color=discord.Color.green()
                )
                dm_embed.set_thumbnail(url=interaction.guild.icon.url if interaction.guild.icon else None)
                await user.send(embed=dm_embed)
            except:
                # –Ø–∫—â–æ –Ω–µ –º–æ–∂–µ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ DM - –ø–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –≤ –∫–∞–Ω–∞–ª—ñ
                await interaction.followup.send(
                    f"‚ö†Ô∏è {user.mention}, –Ω–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –ü–ü. " +
                    f"–í–∞—à–∞ –∑–∞—è–≤–∫–∞ —Å—Ö–≤–∞–ª–µ–Ω–∞ —ñ —Ä–æ–ª—å {role.mention} –¥–æ–¥–∞–Ω–æ!",
                    ephemeral=False
                )
            
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ä–æ–ª—ñ: {e}", ephemeral=True)
    
    @discord.ui.button(label="‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏ –∑–∞—è–≤–∫—É", style=discord.ButtonStyle.red, custom_id="reject_role_application")
    async def reject(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∞
        if not any(role.id == CONFIG["MODERATOR_ROLE_ID"] for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤!", ephemeral=True)
            return
        
        # Modal –¥–ª—è –ø—Ä–∏—á–∏–Ω–∏ –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è
        modal = RejectModal(self.role_id, self.user_id)
        await interaction.response.send_modal(modal)

class GeneralTicketButtons(discord.ui.View):
    def __init__(self, ticket_type: str = None, user_id: int = None):
        super().__init__(timeout=None)
        self.ticket_type = ticket_type
        self.user_id = user_id
    
    @discord.ui.button(label="‚úÖ –í–∏—Ä—ñ—à–µ–Ω–æ", style=discord.ButtonStyle.green, custom_id="resolve_general_ticket")
    async def resolve(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∞
        if not any(role.id == CONFIG["MODERATOR_ROLE_ID"] for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤!", ephemeral=True)
            return
        
        if not self.ticket_type or not self.user_id:
            await interaction.response.send_message("‚ùå –î–∞–Ω—ñ —Ç—ñ–∫–µ—Ç–∞ –≤—Ç—Ä–∞—á–µ–Ω–æ.", ephemeral=True)
            return
        
        user = interaction.guild.get_member(self.user_id)
        config = TICKET_TYPES.get(self.ticket_type, {"name": "–ù–µ–≤—ñ–¥–æ–º–∏–π —Ç–∏–ø"})
        
        embed = discord.Embed(
            title="‚úÖ –¢—ñ–∫–µ—Ç –≤–∏—Ä—ñ—à–µ–Ω–æ",
            description=f"**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:** {user.mention if user else '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä'}\n" +
                       f"**–¢–∏–ø —Ç—ñ–∫–µ—Ç–∞:** {config['name']}\n" +
                       f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}",
            color=discord.Color.green(),
            timestamp=datetime.now()
        )
        embed.add_field(
            name="üìã –°—Ç–∞—Ç—É—Å",
            value="–¢—ñ–∫–µ—Ç —É—Å–ø—ñ—à–Ω–æ –≤–∏—Ä—ñ—à–µ–Ω–æ —Ç–∞ –≥–æ—Ç–æ–≤–∏–π –¥–æ –∑–∞–∫—Ä–∏—Ç—Ç—è",
            inline=False
        )
        
        await interaction.response.edit_message(embed=embed, view=TicketCloseView())
        
        # DM –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        if user:
            try:
                dm_embed = discord.Embed(
                    title="‚úÖ –¢—ñ–∫–µ—Ç –≤–∏—Ä—ñ—à–µ–Ω–æ",
                    description=f"–í–∞—à —Ç—ñ–∫–µ—Ç —Ç–∏–ø—É **{config['name']}** –±—É–ª–æ –≤–∏—Ä—ñ—à–µ–Ω–æ.\n\n" +
                               f"üîπ –°–µ—Ä–≤–µ—Ä: **{interaction.guild.name}**\n" +
                               f"üîπ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {interaction.user.mention}\n" +
                               f"üîπ –î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è!",
                    color=discord.Color.green()
                )
                await user.send(embed=dm_embed)
            except:
                pass

class RejectModal(discord.ui.Modal, title="–ü—Ä–∏—á–∏–Ω–∞ –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è"):
    def __init__(self, role_id: int, user_id: int):
        super().__init__(timeout=300)
        self.role_id = role_id
        self.user_id = user_id
    
    reason = discord.ui.TextInput(
        label="–ü—Ä–∏—á–∏–Ω–∞ –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è –∑–∞—è–≤–∫–∏",
        placeholder="–í–∫–∞–∂—ñ—Ç—å —á–æ–º—É –∑–∞—è–≤–∫—É –±—É–ª–æ –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ...",
        required=True,
        max_length=1000,
        style=discord.TextStyle.paragraph
    )
    
    async def on_submit(self, interaction: discord.Interaction):
        user = interaction.guild.get_member(self.user_id)
        role = interaction.guild.get_role(self.role_id)
        
        embed = discord.Embed(
            title="‚ùå –ó–∞—è–≤–∫—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ",
            description=f"**–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:** {user.mention if user else '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–∫–∏–Ω—É–≤ —Å–µ—Ä–≤–µ—Ä'}\n" +
                       f"**–†–æ–ª—å:** {role.mention if role else '–†–æ–ª—å –≤–∏–¥–∞–ª–µ–Ω–∞'}\n" +
                       f"**–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä:** {interaction.user.mention}",
            color=discord.Color.red(),
            timestamp=datetime.now()
        )
        embed.add_field(
            name="üìù –ü—Ä–∏—á–∏–Ω–∞ –≤—ñ–¥—Ö–∏–ª–µ–Ω–Ω—è",
            value=self.reason.value,
            inline=False
        )
        
        await interaction.response.edit_message(embed=embed, view=TicketCloseView())
        
        # DM –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
        if user:
            try:
                dm_embed = discord.Embed(
                    title="‚ùå –ó–∞—è–≤–∫—É –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ",
                    description=f"–ù–∞ –∂–∞–ª—å, –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ —Ä–æ–ª—å **{role.name if role else '–Ω–µ–≤—ñ–¥–æ–º–∞ —Ä–æ–ª—å'}** –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ.\n\n" +
                               f"üîπ –°–µ—Ä–≤–µ—Ä: **{interaction.guild.name}**\n" +
                               f"üîπ –ü—Ä–∏—á–∏–Ω–∞: {self.reason.value}\n" +
                               f"üîπ –í–∏ –º–æ–∂–µ—Ç–µ –ø–æ–¥–∞—Ç–∏ –Ω–æ–≤—É –∑–∞—è–≤–∫—É –ø—ñ–∑–Ω—ñ—à–µ",
                    color=discord.Color.red()
                )
                await user.send(embed=dm_embed)
            except:
                pass

class TicketCloseView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)
    
    @discord.ui.button(label="üîí –ó–∞–∫—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç", style=discord.ButtonStyle.secondary, custom_id="close_ticket_final")
    async def close_ticket(self, interaction: discord.Interaction, button: discord.ui.Button):
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∞
        if not any(role.id == CONFIG["MODERATOR_ROLE_ID"] for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤!", ephemeral=True)
            return
        
        embed = discord.Embed(
            title="üîí –¢—ñ–∫–µ—Ç –∑–∞–∫—Ä–∏–≤–∞—î—Ç—å—Å—è",
            description=f"–¢—ñ–∫–µ—Ç –∑–∞–∫—Ä–∏—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}\n\n" +
                       f"üìÖ –ß–∞—Å –∑–∞–∫—Ä–∏—Ç—Ç—è: <t:{int(datetime.now().timestamp())}:F>\n" +
                       f"‚è∞ –ö–∞–Ω–∞–ª –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥...",
            color=discord.Color.orange(),
            timestamp=datetime.now()
        )
        embed.set_footer(text="–î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ç—ñ–∫–µ—Ç—ñ–≤!")
        
        await interaction.response.edit_message(embed=embed, view=None)
        
        # –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—è
        await self.log_ticket_closure(interaction)
        
        # –í–∏–¥–∞–ª—è—î–º–æ –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(15)
        try:
            await interaction.followup.channel.delete(reason=f"–¢—ñ–∫–µ—Ç –∑–∞–∫—Ä–∏—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user}")
        except:
            pass
    
    async def log_ticket_closure(self, interaction: discord.Interaction):
        """–õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—è —Ç—ñ–∫–µ—Ç–∞"""
        if not CONFIG["LOG_CHANNEL_ID"]:
            return
        
        log_channel = interaction.guild.get_channel(CONFIG["LOG_CHANNEL_ID"])
        if not log_channel:
            return
        
        try:
            embed = discord.Embed(
                title="üîí –¢—ñ–∫–µ—Ç –∑–∞–∫—Ä–∏—Ç–æ",
                color=discord.Color.orange(),
                timestamp=datetime.now()
            )
            embed.add_field(name="üìç –ö–∞–Ω–∞–ª", value=f"#{interaction.channel.name}", inline=True)
            embed.add_field(name="üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True)
            embed.add_field(name="‚è∞ –ß–∞—Å –∑–∞–∫—Ä–∏—Ç—Ç—è", value=f"<t:{int(datetime.now().timestamp())}:F>", inline=True)
            
            await log_channel.send(embed=embed)
        except:
            pass

class TicketSystem(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
    
    async def cog_load(self):
        """–í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ cog"""
        # –î–æ–¥–∞—î–º–æ persistent views
        self.bot.add_view(TicketMainView())
        self.bot.add_view(RoleApplicationButtons())
        self.bot.add_view(GeneralTicketButtons())
        self.bot.add_view(TicketCloseView())
        print("üé´ Persistent views –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!")
    
    @app_commands.command(name="ticket", description="üé´ –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç")
    async def create_ticket(self, interaction: discord.Interaction):
        """–ì–æ–ª–æ–≤–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç—ñ–∫–µ—Ç—ñ–≤"""
        
        embed = discord.Embed(
            title="üé´ –°–∏—Å—Ç–µ–º–∞ —Ç—ñ–∫–µ—Ç—ñ–≤",
            description="**–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ —Å–∏—Å—Ç–µ–º–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏!**\n\n" +
                       "–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ç—ñ–∫–µ—Ç–∞, —è–∫–∏–π –Ω–∞–π–∫—Ä–∞—â–µ –æ–ø–∏—Å—É—î –≤–∞—à—É —Å–∏—Ç—É–∞—Ü—ñ—é:",
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        # –î–æ–¥–∞—î–º–æ –ø–æ–ª—è –∑ –æ–ø–∏—Å–æ–º –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É
        for ticket_type, config in TICKET_TYPES.items():
            embed.add_field(
                name=f"{config['emoji']} {config['name']}",
                value=f"‚Ä¢ {config['description']}",
                inline=False
            )
        
        embed.add_field(
            name="üìã –í–∞–∂–ª–∏–≤–æ:",
            value="‚Ä¢ –û–¥–∏–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –º–æ–∂–µ –º–∞—Ç–∏ –ª–∏—à–µ –æ–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω–∏–π —Ç—ñ–∫–µ—Ç –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É\n" +
                  "‚Ä¢ –ë—É–¥—å—Ç–µ —á–µ—Å–Ω–∏–º–∏ —Ç–∞ –¥–µ—Ç–∞–ª—å–Ω–∏–º–∏ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—è—Ö\n" +
                  "‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü—ñ—è –≤—ñ–¥–ø–æ–≤—ñ—Å—Ç—å –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º",
            inline=False
        )
        
        embed.set_footer(text="–í–∏–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é –Ω–∏–∂—á–µ ‚¨áÔ∏è")
        embed.set_thumbnail(url=interaction.guild.icon.url if interaction.guild.icon else None)
        
        view = TicketMainView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
    
    @app_commands.command(name="ticket_panel", description="üõ†Ô∏è –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–∞–Ω–µ–ª—å —Ç—ñ–∫–µ—Ç—ñ–≤ (—Ç—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω–∏)")
    @app_commands.describe(channel="–ö–∞–Ω–∞–ª –¥–ª—è —Ä–æ–∑–º—ñ—â–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ —Ç—ñ–∫–µ—Ç—ñ–≤")
    async def setup_tickets(self, interaction: discord.Interaction, channel: discord.TextChannel = None):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–æ—Å—Ç—ñ–π–Ω–æ—ó –ø–∞–Ω–µ–ª—ñ —Ç—ñ–∫–µ—Ç—ñ–≤"""
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∞
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚ùå –¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!", ephemeral=True)
            return
        
        target_channel = channel or interaction.channel
        
        # –ì–æ–ª–æ–≤–Ω–∏–π embed
        main_embed = discord.Embed(
            title="üé´ –°–∏—Å—Ç–µ–º–∞ —Ç—ñ–∫–µ—Ç—ñ–≤ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏",
            description=f"**–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä {interaction.guild.name}!**\n\n" +
                       "–Ø–∫—â–æ —É –≤–∞—Å —î –ø–∏—Ç–∞–Ω–Ω—è, –ø—Ä–æ–±–ª–µ–º–∏ –∞–±–æ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó - —Å—Ç–≤–æ—Ä—ñ—Ç—å —Ç—ñ–∫–µ—Ç!\n" +
                       "–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤ –∑–∞–≤–∂–¥–∏ –≥–æ—Ç–æ–≤–∞ –¥–æ–ø–æ–º–æ–≥—Ç–∏. ‚ú®",
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        # –î–æ–¥–∞—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —Ç–∏–ø–∏ —Ç—ñ–∫–µ—Ç—ñ–≤
        ticket_info = ""
        for ticket_type, config in TICKET_TYPES.items():
            ticket_info += f"{config['emoji']} **{config['name']}**\n‚îú {config['description']}\n\n"
        
        main_embed.add_field(
            name="üìã –î–æ—Å—Ç—É–ø–Ω—ñ —Ç–∏–ø–∏ —Ç—ñ–∫–µ—Ç—ñ–≤:",
            value=ticket_info.strip(),
            inline=False
        )
        
        main_embed.add_field(
            name="üìå –ü—Ä–∞–≤–∏–ª–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:",
            value="üîπ –û–¥–∏–Ω –∞–∫—Ç–∏–≤–Ω–∏–π —Ç—ñ–∫–µ—Ç –∫–æ–∂–Ω–æ–≥–æ —Ç–∏–ø—É –Ω–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞\n" +
                  "üîπ –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ —á–µ—Å–Ω–æ —Ç–∞ –¥–µ—Ç–∞–ª—å–Ω–æ\n" +
                  "üîπ –ë—É–¥—å—Ç–µ –≤–≤—ñ—á–ª–∏–≤–∏–º–∏ –∑ –º–æ–¥–µ—Ä–∞—Ü—ñ—î—é\n" +
                  "üîπ –ù–µ —Å—Ç–≤–æ—Ä—é–π—Ç–µ —Ç—ñ–∫–µ—Ç–∏ –±–µ–∑ –ø–æ—Ç—Ä–µ–±–∏",
            inline=False
        )
        
        main_embed.add_field(
            name="‚è∞ –ß–∞—Å —Ä–æ–±–æ—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏:",
            value="–ú–æ–¥–µ—Ä–∞—Ü—ñ—è –ø—Ä–∞—Ü—é—î —Ü—ñ–ª–æ–¥–æ–±–æ–≤–æ, –∞–ª–µ —á–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –º–æ–∂–µ –≤–∞—Ä—ñ—é–≤–∞—Ç–∏—Å—è –≤—ñ–¥ –¥–µ–∫—ñ–ª—å–∫–æ—Ö —Ö–≤–∏–ª–∏–Ω –¥–æ –¥–µ–∫—ñ–ª—å–∫–æ—Ö –≥–æ–¥–∏–Ω –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è.",
            inline=False
        )
        
        main_embed.set_footer(text="üîπ –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –º–µ–Ω—é –Ω–∏–∂—á–µ —â–æ–± —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç")
        main_embed.set_thumbnail(url=interaction.guild.icon.url if interaction.guild.icon else None)
        
        # –î–æ–¥–∞—Ç–∫–æ–≤–∏–π embed –∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è–º–∏
        instruction_embed = discord.Embed(
            title="üìñ –Ø–∫ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ç—ñ–∫–µ—Ç?",
            color=discord.Color.green()
        )
        
        instruction_embed.add_field(
            name="–ö—Ä–æ–∫ 1Ô∏è‚É£",
            value="–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –º–µ–Ω—é –≤–∏–±–æ—Ä—É –Ω–∏–∂—á–µ",
            inline=True
        )
        
        instruction_embed.add_field(
            name="–ö—Ä–æ–∫ 2Ô∏è‚É£", 
            value="–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –≤–∞—à–æ–≥–æ –ø–∏—Ç–∞–Ω–Ω—è",
            inline=True
        )
        
        instruction_embed.add_field(
            name="–ö—Ä–æ–∫ 3Ô∏è‚É£",
            value="–î–æ—á–µ–∫–∞–π—Ç–µ—Å—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª—É",
            inline=True
        )
        
        instruction_embed.add_field(
            name="–ö—Ä–æ–∫ 4Ô∏è‚É£",
            value="–í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –Ω–∞ –ø–∏—Ç–∞–Ω–Ω—è –±–æ—Ç–∞",
            inline=True
        )
        
        instruction_embed.add_field(
            name="–ö—Ä–æ–∫ 5Ô∏è‚É£",
            value="–î–æ—á–µ–∫–∞–π—Ç–µ—Å—è –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞",
            inline=True
        )
        
        instruction_embed.add_field(
            name="–ö—Ä–æ–∫ 6Ô∏è‚É£",
            value="–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è! üéâ",
            inline=True
        )
        
        view = TicketMainView()
        
        # –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        await target_channel.send(embeds=[main_embed, instruction_embed], view=view)
        
        success_embed = discord.Embed(
            title="‚úÖ –ü–∞–Ω–µ–ª—å —Ç—ñ–∫–µ—Ç—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ!",
            description=f"–ü–∞–Ω–µ–ª—å —É—Å–ø—ñ—à–Ω–æ —Ä–æ–∑–º—ñ—â–µ–Ω–æ –≤ {target_channel.mention}\n\n" +
                       f"üîπ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —Ç–µ–ø–µ—Ä –º–æ–∂—É—Ç—å —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ —Ç—ñ–∫–µ—Ç–∏\n" +
                       f"üîπ –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å —â–æ ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—Å—å–∫–æ—ó —Ä–æ–ª—ñ –≤–∫–∞–∑–∞–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ\n" +
                       f"üîπ –ó–∞ –ø–æ—Ç—Ä–µ–±–∏ –Ω–∞–ª–∞—à—Ç—É–π—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó",
            color=discord.Color.green()
        )
        
        await interaction.response.send_message(embed=success_embed, ephemeral=True)
    
    @app_commands.command(name="close_ticket", description="üîí –ó–∞–∫—Ä–∏—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Ç—ñ–∫–µ—Ç (—Ç—ñ–ª—å–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∏)")
    async def close_ticket_command(self, interaction: discord.Interaction):
        """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–∫—Ä–∏—Ç—Ç—è —Ç—ñ–∫–µ—Ç–∞"""
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∞
        if not any(role.id == CONFIG["MODERATOR_ROLE_ID"] for role in interaction.user.roles):
            await interaction.response.send_message("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –ø—Ä–∞–≤!", ephemeral=True)
            return
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ —Ç—ñ–∫–µ—Ç –∫–∞–Ω–∞–ª
        if not any(ticket_type in interaction.channel.name for ticket_type in TICKET_TYPES.keys()):
            await interaction.response.send_message("‚ùå –¶—è –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–∞—Ü—é—î —Ç—ñ–ª—å–∫–∏ –≤ –∫–∞–Ω–∞–ª–∞—Ö —Ç—ñ–∫–µ—Ç—ñ–≤!", ephemeral=True)
            return
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ embed –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è
        embed = discord.Embed(
            title="‚ö†Ô∏è –ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—è",
            description=f"–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ —â–æ —Ö–æ—á–µ—Ç–µ –∑–∞–∫—Ä–∏—Ç–∏ —Ü–µ–π —Ç—ñ–∫–µ—Ç?\n\n" +
                       f"üîπ –ö–∞–Ω–∞–ª: {interaction.channel.mention}\n" +
                       f"üîπ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: {interaction.user.mention}\n" +
                       f"üîπ –ö–∞–Ω–∞–ª –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ **–±–µ–∑–ø–æ–≤–æ—Ä–æ—Ç–Ω–æ**",
            color=discord.Color.orange()
        )
        
        view = ConfirmCloseView()
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
    
    @app_commands.command(name="ticket_config", description="‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ç—ñ–∫–µ—Ç—ñ–≤")
    @app_commands.describe(
        moderator_role="–†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤",
        log_channel="–ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥—ñ–≤ —Ç—ñ–∫–µ—Ç—ñ–≤",
        category="–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –¥–ª—è —Ç—ñ–∫–µ—Ç—ñ–≤"
    )
    async def config_tickets(
        self, 
        interaction: discord.Interaction,
        moderator_role: discord.Role = None,
        log_channel: discord.TextChannel = None,
        category: discord.CategoryChannel = None
    ):
        """–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —Å–∏—Å—Ç–µ–º–∏ —Ç—ñ–∫–µ—Ç—ñ–≤"""
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—Ä–∞–≤–∞
        if not interaction.user.guild_permissions.administrator:
            await interaction.response.send_message("‚ùå –¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –º–æ–∂—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É!", ephemeral=True)
            return
        
        changes_made = []
        
        if moderator_role:
            CONFIG["MODERATOR_ROLE_ID"] = moderator_role.id
            changes_made.append(f"üõ°Ô∏è –†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤: {moderator_role.mention}")
        
        if log_channel:
            CONFIG["LOG_CHANNEL_ID"] = log_channel.id
            changes_made.append(f"üìù –ö–∞–Ω–∞–ª –ª–æ–≥—ñ–≤: {log_channel.mention}")
        
        if category:
            CONFIG["CATEGORY_ID"] = category.id
            changes_made.append(f"üìÅ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Ç—ñ–∫–µ—Ç—ñ–≤: {category.name}")
        
        if changes_made:
            embed = discord.Embed(
                title="‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é –æ–Ω–æ–≤–ª–µ–Ω–æ!",
                description="**–ó–º—ñ–Ω–µ–Ω–æ –Ω–∞—Å—Ç—É–ø–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:**\n\n" + "\n".join(changes_made),
                color=discord.Color.green()
            )
        else:
            # –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ—Ç–æ—á–Ω—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
            mod_role = interaction.guild.get_role(CONFIG["MODERATOR_ROLE_ID"])
            log_ch = interaction.guild.get_channel(CONFIG["LOG_CHANNEL_ID"])
            cat = interaction.guild.get_channel(CONFIG["CATEGORY_ID"])
            
            embed = discord.Embed(
                title="‚öôÔ∏è –ü–æ—Ç–æ—á–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è",
                color=discord.Color.blue()
            )
            
            embed.add_field(
                name="üõ°Ô∏è –†–æ–ª—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ñ–≤",
                value=mod_role.mention if mod_role else "‚ùå –ù–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ",
                inline=False
            )
            
            embed.add_field(
                name="üìù –ö–∞–Ω–∞–ª –ª–æ–≥—ñ–≤",
                value=log_ch.mention if log_ch else "‚ùå –ù–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ",
                inline=False
            )
            
            embed.add_field(
                name="üìÅ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Ç—ñ–∫–µ—Ç—ñ–≤",
                value=cat.name if cat else "‚ùå –ë—É–¥–µ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ",
                inline=False
            )
            
            embed.add_field(
                name="üìã –î–æ—Å—Ç—É–ø–Ω—ñ —Ä–æ–ª—ñ –¥–ª—è –∑–∞—è–≤–æ–∫",
                value=f"{len(CONFIG['AVAILABLE_ROLES'])} —Ä–æ–ª–µ–π" if CONFIG['AVAILABLE_ROLES'] else "–í—Å—ñ —Ä–æ–ª—ñ —Å–µ—Ä–≤–µ—Ä–∞",
                inline=False
            )
        
        await interaction.response.send_message(embed=embed, ephemeral=True)
    
    @app_commands.command(name="ticket_stats", description="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç—ñ–∫–µ—Ç—ñ–≤")
    async def ticket_stats(self, interaction: discord.Interaction):
        """–ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º–∏ —Ç—ñ–∫–µ—Ç—ñ–≤"""
        
        # –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ —Ç—ñ–∫–µ—Ç–∏
        active_tickets = 0
        tickets_by_type = {}
        
        category = None
        if CONFIG["CATEGORY_ID"]:
            category = interaction.guild.get_channel(CONFIG["CATEGORY_ID"])
        
        if category:
            for channel in category.text_channels:
                active_tickets += 1
                # –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø —Ç—ñ–∫–µ—Ç–∞ –∑ –Ω–∞–∑–≤–∏ –∫–∞–Ω–∞–ª—É
                for ticket_type in TICKET_TYPES.keys():
                    if ticket_type in channel.name:
                        tickets_by_type[ticket_type] = tickets_by_type.get(ticket_type, 0) + 1
                        break
        
        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º–∏ —Ç—ñ–∫–µ—Ç—ñ–≤",
            description=f"**–ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –Ω–∞ {datetime.now().strftime('%d.%m.%Y %H:%M')}**",
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        embed.add_field(
            name="üé´ –ê–∫—Ç–∏–≤–Ω—ñ —Ç—ñ–∫–µ—Ç–∏",
            value=f"**{active_tickets}** —Ç—ñ–∫–µ—Ç—ñ–≤ –≤—ñ–¥–∫—Ä–∏—Ç–æ",
            inline=True
        )
        
        embed.add_field(
            name="üìÅ –ö–∞—Ç–µ–≥–æ—Ä—ñ—è",
            value=category.mention if category else "‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–∞",
            inline=True
        )
        
        embed.add_field(
            name="üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∏",
            value=f"<@&{CONFIG['MODERATOR_ROLE_ID']}>",
            inline=True
        )
        
        # –†–æ–∑–±–∏–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º —Ç—ñ–∫–µ—Ç—ñ–≤
        if tickets_by_type:
            breakdown = ""
            for ticket_type, count in tickets_by_type.items():
                config = TICKET_TYPES.get(ticket_type, {})
                emoji = config.get('emoji', '‚ùì')
                name = config.get('name', ticket_type)
                breakdown += f"{emoji} {name}: **{count}**\n"
            
            embed.add_field(
                name="üìã –†–æ–∑–±–∏–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º",
                value=breakdown.strip(),
                inline=False
            )
        
        embed.set_footer(text=f"ID —Å–µ—Ä–≤–µ—Ä–∞: {interaction.guild.id}")
        embed.set_thumbnail(url=interaction.guild.icon.url if interaction.guild.icon else None)
        
        await interaction.response.send_message(embed=embed, ephemeral=True)

class ConfirmCloseView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=60)
    
    @discord.ui.button(label="‚úÖ –¢–∞–∫, –∑–∞–∫—Ä–∏—Ç–∏", style=discord.ButtonStyle.danger, custom_id="confirm_close_ticket")
    async def confirm_close(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="üîí –¢—ñ–∫–µ—Ç –∑–∞–∫—Ä–∏–≤–∞—î—Ç—å—Å—è",
            description=f"–¢—ñ–∫–µ—Ç –∑–∞–∫—Ä–∏—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}\n\n" +
                       f"üìÖ –ß–∞—Å –∑–∞–∫—Ä–∏—Ç—Ç—è: <t:{int(datetime.now().timestamp())}:F>\n" +
                       f"‚è∞ –ö–∞–Ω–∞–ª –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...",
            color=discord.Color.orange(),
            timestamp=datetime.now()
        )
        embed.set_footer(text="–î—è–∫—É—î–º–æ –∑–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ —Ç—ñ–∫–µ—Ç—ñ–≤!")
        
        await interaction.response.edit_message(embed=embed, view=None)
        
        # –õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—è
        await self.log_ticket_closure(interaction)
        
        # –í–∏–¥–∞–ª—è—î–º–æ –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥
        await asyncio.sleep(10)
        try:
            await interaction.followup.channel.delete(reason=f"–¢—ñ–∫–µ—Ç –∑–∞–∫—Ä–∏—Ç–æ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º {interaction.user}")
        except:
            pass
    
    @discord.ui.button(label="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", style=discord.ButtonStyle.secondary, custom_id="cancel_close_ticket")
    async def cancel_close(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = discord.Embed(
            title="‚úÖ –°–∫–∞—Å–æ–≤–∞–Ω–æ",
            description="–ó–∞–∫—Ä–∏—Ç—Ç—è —Ç—ñ–∫–µ—Ç–∞ —Å–∫–∞—Å–æ–≤–∞–Ω–æ.",
            color=discord.Color.green()
        )
        await interaction.response.edit_message(embed=embed, view=None)
    
    async def log_ticket_closure(self, interaction: discord.Interaction):
        """–õ–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç—Ç—è —Ç—ñ–∫–µ—Ç–∞"""
        if not CONFIG["LOG_CHANNEL_ID"]:
            return
        
        log_channel = interaction.guild.get_channel(CONFIG["LOG_CHANNEL_ID"])
        if not log_channel:
            return
        
        try:
            embed = discord.Embed(
                title="üîí –¢—ñ–∫–µ—Ç –∑–∞–∫—Ä–∏—Ç–æ",
                color=discord.Color.orange(),
                timestamp=datetime.now()
            )
            embed.add_field(name="üìç –ö–∞–Ω–∞–ª", value=f"#{interaction.channel.name}", inline=True)
            embed.add_field(name="üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", value=interaction.user.mention, inline=True)
            embed.add_field(name="‚è∞ –ß–∞—Å –∑–∞–∫—Ä–∏—Ç—Ç—è", value=f"<t:{int(datetime.now().timestamp())}:F>", inline=False)
            
            await log_channel.send(embed=embed)
        except:
            pass
    
    async def on_timeout(self):
        # –í—ñ–¥–∫–ª—é—á–∞—î–º–æ –∫–Ω–æ–ø–∫–∏ –ø—ñ—Å–ª—è —Ç–∞–π–º–∞—É—Ç—É
        for item in self.children:
            item.disabled = True

async def setup(bot):
    await bot.add_cog(TicketSystem(bot))
    print("üé´ Ticket System –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!")