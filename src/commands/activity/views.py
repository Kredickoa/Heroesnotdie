# views.py - –û–Ω–æ–≤–ª–µ–Ω—ñ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –¥–ª—è –Ω–æ–≤–æ—ó —Å–∏—Å—Ç–µ–º–∏

import discord
from ._constants import SHOP_ITEMS, BATTLE_COMMENTS
import random

class DuelRequestView(discord.ui.View):
    def __init__(self, challenger, target, timeout=60):
        super().__init__(timeout=timeout)
        self.challenger = challenger
        self.target = target

    @discord.ui.button(label="‚öîÔ∏è –ü—Ä–∏–π–Ω—è—Ç–∏ –¥—É–µ–ª—å", style=discord.ButtonStyle.success, emoji="üéØ")
    async def accept(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.target:
            await interaction.response.send_message("‚ùå –¶–µ –Ω–µ —Ç–≤—ñ–π –¥—É–µ–ª—å, —Å–ø–æ—Å—Ç–µ—Ä—ñ–≥–∞—á!", ephemeral=True)
            return
        
        # –°—Ç–≤–æ—Ä–∏—Ç–∏ –µ—Ñ–µ–∫—Ç–Ω–∏–π embed –ø—Ä–∏–π–Ω—è—Ç—Ç—è
        accept_embed = discord.Embed(
            title="‚ö° –î–£–ï–õ–¨ –ü–†–ò–ô–ù–Ø–¢–û!",
            description=f"**{self.target.mention}** –ø—Ä–∏–π–º–∞—î –≤–∏–∫–ª–∏–∫ –≤—ñ–¥ **{self.challenger.mention}**!\n\nüî• **–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –±–æ—é...**",
            color=0xE67E22
        )
        accept_embed.set_footer(text="–°–∏—Å—Ç–µ–º–∞ –æ–±–∏—Ä–∞—î –ø–µ—Ä—à–æ–≥–æ —Å—Ç—Ä—ñ–ª—å—Ü—è...")
        
        await interaction.response.edit_message(embed=accept_embed, view=None)
        
        # –ó–∞–ø—É—Å–∫ –¥—É–µ–ª—ñ —á–µ—Ä–µ–∑ —Å–µ–∫—É–Ω–¥—É –¥–ª—è –¥—Ä–∞–º–∞—Ç–∏—á–Ω–æ—Å—Ç—ñ
        import asyncio
        await asyncio.sleep(1)
        
        duel_cog = interaction.client.get_cog("PidorDuelCommand")
        if duel_cog:
            await duel_cog.execute_duel(interaction, self.challenger, self.target)

    @discord.ui.button(label="‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏", style=discord.ButtonStyle.danger, emoji="üèÉ")
    async def decline(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.target:
            await interaction.response.send_message("‚ùå –¶–µ –Ω–µ —Ç–≤—ñ–π –¥—É–µ–ª—å!", ephemeral=True)
            return

        decline_messages = [
            f"‚ùå {self.target.mention} –∑–ª—è–∫–∞–≤—Å—è –¥—É–µ–ª—ñ –∑ {self.challenger.mention}! –°–ª–∞–±–∞–∫! üêî",
            f"üí® {self.target.mention} –≤—Ç—ñ–∫ –≤—ñ–¥ –±–æ—é! {self.challenger.mention} –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –Ω–µ–ø–µ—Ä–µ–º–æ–∂–Ω–∏–º!",
            f"üèÉ‚Äç‚ôÇÔ∏è {self.target.mention} –æ–±—Ä–∞–≤ –∂–∏—Ç—Ç—è –∑–∞–º—ñ—Å—Ç—å —Å–ª–∞–≤–∏! {self.challenger.mention} —á–µ–∫–∞—î –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –≥–µ—Ä–æ—è!",
            f"üò± {self.target.mention} –Ω–µ –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ç–∞–∫–æ–≥–æ —Ä—ñ–≤–Ω—è! {self.challenger.mention} —à—É–∫–∞—î –≥—ñ–¥–Ω–æ–≥–æ –æ–ø–æ–Ω–µ–Ω—Ç–∞!"
        ]

        embed = discord.Embed(
            title="üèÉ‚Äç‚ôÇÔ∏è –î–£–ï–õ–¨ –í–Ü–î–•–ò–õ–ï–ù–û!",
            description=random.choice(decline_messages),
            color=0xE74C3C
        )
        embed.set_footer(text="–ú–æ–∂–ª–∏–≤–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä–∞–∑—É –±—É–¥–µ —Å–º—ñ–ª–∏–≤—ñ—à–µ...")
        
        await interaction.response.edit_message(embed=embed, view=None)

    async def on_timeout(self):
        timeout_embed = discord.Embed(
            title="‚è∞ –ß–ê–° –í–ò–ô–®–û–í!",
            description=f"{self.target.mention} –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–≤ –Ω–∞ –≤–∏–∫–ª–∏–∫ –≤—ñ–¥ {self.challenger.mention}.\n\nüò¥ –ú–∞–±—É—Ç—å, —Å–ø–∏—Ç—å –∞–±–æ –≤—Ç—ñ–∫!",
            color=0x95A5A6
        )
        timeout_embed.set_footer(text="–ß–∞—Å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: 60 —Å–µ–∫—É–Ω–¥")
        
        try:
            # –ó–Ω–∞–π—Ç–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ –æ–Ω–æ–≤–∏—Ç–∏ –π–æ–≥–æ
            message = None  # –¢—Ä–µ–±–∞ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç–∏ message –¥–æ View
            if hasattr(self, 'message') and self.message:
                await self.message.edit(embed=timeout_embed, view=None)
        except:
            pass

class DuelBattleView(discord.ui.View):
    def __init__(self, shooter, opponent, battle_info, duel_cog, interaction_obj):
        super().__init__(timeout=30)
        self.shooter = shooter
        self.opponent = opponent
        self.battle_info = battle_info
        self.duel_cog = duel_cog
        self.interaction_obj = interaction_obj
        self.shot_taken = False

    @discord.ui.button(label="üî´ –ü–û–°–¢–†–Ü–õ!", style=discord.ButtonStyle.danger, emoji="üí•")
    async def shoot(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.shooter or self.shot_taken:
            if interaction.user != self.shooter:
                await interaction.response.send_message("‚ùå –ù–µ —Ç–≤–æ—è —á–µ—Ä–≥–∞ —Å—Ç—Ä—ñ–ª—è—Ç–∏, –≥–ª—è–¥–∞—á!", ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå –¢–∏ –≤–∂–µ —Å—Ç—Ä—ñ–ª—è–≤!", ephemeral=True)
            return
        
        self.shot_taken = True
        
        # –ü–æ–∫–∞–∑–∞—Ç–∏ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø–æ—Å—Ç—Ä—ñ–ª—É
        shot_embed = discord.Embed(
            title="üí• –ü–û–°–¢–†–Ü–õ!",
            description=f"**{self.shooter.mention}** —Å—Ç—Ä—ñ–ª—è—î...\n\nüéØ –í–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç...",
            color=0xE67E22
        )
        
        await interaction.response.edit_message(embed=shot_embed, view=None)
        
        # –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è –Ω–∞–ø—Ä—É–≥–∏
        import asyncio
        await asyncio.sleep(1.5)
        
        # –û–±—Ä–æ–±–∏—Ç–∏ –ø–æ—Å—Ç—Ä—ñ–ª
        await self.duel_cog.process_shot(
            interaction, 
            self.shooter, 
            self.opponent, 
            self.battle_info,
            first_shot=True
        )

    async def on_timeout(self):
        # –Ø–∫—â–æ –≥—Ä–∞–≤–µ—Ü—å –Ω–µ —Å—Ç—Ä—ñ–ª—å–Ω—É–≤ - –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø—Ä–æ–º–∞—Ö
        if not self.shot_taken:
            timeout_embed = discord.Embed(
                title="‚è∞ –ü–†–û–°–¢–†–û–ß–ï–ù–û!",
                description=f"**{self.shooter.mention}** –Ω–µ –≤—Å—Ç–∏–≥ —Å—Ç—Ä–µ–ª—å–Ω—É—Ç–∏ –≤—á–∞—Å–Ω–æ!\n\nüíî –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø—Ä–æ–º–∞—Ö!",
                color=0x95A5A6
            )
            
            try:
                await self.interaction_obj.edit_original_response(embed=timeout_embed, view=None)
                
                # –û–±—Ä–æ–±–∏—Ç–∏ —è–∫ –ø—Ä–æ–º–∞—Ö
                import asyncio
                await asyncio.sleep(2)
                
                await self.duel_cog.process_shot(
                    self.interaction_obj,
                    self.shooter,
                    self.opponent, 
                    self.battle_info,
                    first_shot=True,
                    auto_miss=True
                )
            except:
                pass

# –î–æ–¥–∞—Ç–∫–æ–≤—ñ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –¥–ª—è –º–∞–π–±—É—Ç–Ω—ñ—Ö —Ñ—É–Ω–∫—Ü—ñ–π
class ConfirmationView(discord.ui.View):
    """–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –¥—ñ–π (–¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–µ–¥–º–µ—Ç—ñ–≤, —Å–∫–∏–¥–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–æ—â–æ)"""
    def __init__(self, user, action_text, timeout=30):
        super().__init__(timeout=timeout)
        self.user = user
        self.action_text = action_text
        self.confirmed = False

    @discord.ui.button(label="‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏", style=discord.ButtonStyle.success)
    async def confirm(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.user:
            await interaction.response.send_message("‚ùå –¶–µ –Ω–µ –≤–∞—à–µ —Ä—ñ—à–µ–Ω–Ω—è!", ephemeral=True)
            return
        
        self.confirmed = True
        self.stop()
        
        await interaction.response.edit_message(
            content=f"‚úÖ **–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ!** {self.action_text}",
            view=None
        )

    @discord.ui.button(label="‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏", style=discord.ButtonStyle.danger)
    async def cancel(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.user:
            await interaction.response.send_message("‚ùå –¶–µ –Ω–µ –≤–∞—à–µ —Ä—ñ—à–µ–Ω–Ω—è!", ephemeral=True)
            return
        
        self.stop()
        
        await interaction.response.edit_message(
            content="‚ùå **–î—ñ—é —Å–∫–∞—Å–æ–≤–∞–Ω–æ.**",
            view=None
        )

class PaginationView(discord.ui.View):
    """–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –ø–∞–≥—ñ–Ω–∞—Ü—ñ—ó"""
    def __init__(self, pages, user, timeout=300):
        super().__init__(timeout=timeout)
        self.pages = pages
        self.user = user
        self.current_page = 0

    @discord.ui.button(label="‚óÄÔ∏è", style=discord.ButtonStyle.secondary)
    async def previous_page(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.user:
            await interaction.response.send_message("‚ùå –ù–µ –≤–∞—à–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è!", ephemeral=True)
            return
        
        if self.current_page > 0:
            self.current_page -= 1
            await interaction.response.edit_message(embed=self.pages[self.current_page], view=self)
        else:
            await interaction.response.send_message("‚ùå –¶–µ –ø–µ—Ä—à–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞!", ephemeral=True)

    @discord.ui.button(label="‚ñ∂Ô∏è", style=discord.ButtonStyle.secondary)
    async def next_page(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.user:
            await interaction.response.send_message("‚ùå –ù–µ –≤–∞—à–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è!", ephemeral=True)
            return
        
        if self.current_page < len(self.pages) - 1:
            self.current_page += 1
            await interaction.response.edit_message(embed=self.pages[self.current_page], view=self)
        else:
            await interaction.response.send_message("‚ùå –¶–µ –æ—Å—Ç–∞–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∞!", ephemeral=True)

    @discord.ui.button(label="üîÑ –û–Ω–æ–≤–∏—Ç–∏", style=discord.ButtonStyle.primary)
    async def refresh(self, interaction: discord.Interaction, button: discord.ui.Button):
        if interaction.user != self.user:
            await interaction.response.send_message("‚ùå –ù–µ –≤–∞—à–∞ –Ω–∞–≤—ñ–≥–∞—Ü—ñ—è!", ephemeral=True)
            return
        
        await interaction.response.edit_message(embed=self.pages[self.current_page], view=self)
        await interaction.followup.send("üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ!", ephemeral=True)

async def setup(bot):
    pass  # Views –Ω–µ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –æ–∫—Ä–µ–º–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è